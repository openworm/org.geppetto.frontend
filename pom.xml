<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.geppetto</groupId>
	<artifactId>frontend</artifactId>
	<version>0.4.2</version>
	<name>Geppetto Frontend</name>
	<packaging>war</packaging>
	<properties>
		<contextPath>org.geppetto.frontend</contextPath>
		<spring.version>4.3.9.RELEASE</spring.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<profiles>
		<profile>
			<id>master</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.3</version>
						<configuration>
							<nodeVersion>v5.12.0</nodeVersion>
							<npmVersion>3.9.6</npmVersion>
							<nodeDownloadRoot>https://nodejs.org/dist/</nodeDownloadRoot>
						</configuration>
						<executions>
							<execution>
								<id>install node and npm webapp</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<workingDirectory>src/main/webapp</workingDirectory>
								</configuration>
							</execution>
							<execution>
								<id>npm set registry https://registry.npmjs.org/p</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<workingDirectory>src/main/webapp</workingDirectory>
								</configuration>
							</execution>
							<execution>
								<id>npm install webapp</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
									<workingDirectory>src/main/webapp</workingDirectory>
								</configuration>
							</execution>
							<execution>
								<id>npm run build webapp</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<arguments>run build  -- --env.contextPath=${contextPath} --env.useSsl=${useSsl} --env.embedded=${embedded} --env.embedderURL=${embedderURL}</arguments>
									<workingDirectory>src/main/webapp</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.3</version>
						<configuration>
							<nodeVersion>v5.12.0</nodeVersion>
							<npmVersion>3.9.6</npmVersion>
							<nodeDownloadRoot>https://nodejs.org/dist/</nodeDownloadRoot>
							<workingDirectory>src/main/webapp</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install node and npm webapp</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>generate-resources</phase>
							</execution>
							<execution>
								<id>npm install webapp</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>npm run build webapp</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<arguments>run build-dev -- --env.contextPath=${contextPath} --env.useSsl=${useSsl} --env.embedded=${embedded} --env.embedderURL=${embedderURL}</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>org.geppetto</groupId>
			<artifactId>core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geppetto</groupId>
			<artifactId>simulation</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-catalina</artifactId>
			<version>8.5.31</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-coyote</artifactId>
			<version>8.5.31</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-websocket</artifactId>
			<version>8.5.31</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
   			<groupId>javax.servlet</groupId>
   			<artifactId>javax.servlet-api</artifactId>
   			<version>3.1.0</version>
   			 <scope>provided</scope>
   		</dependency>
		<dependency>
			<groupId>org.junit</groupId>
			<artifactId>com.springsource.org.junit</artifactId>
			<version>4.7.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.cglib</groupId>
			<artifactId>com.springsource.net.sf.cglib</artifactId>
			<version>2.2.0</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.15</version>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.3.7</version>
				<extensions>true</extensions>
				<configuration>
					<manifestLocation>src/main/webapp/META-INF</manifestLocation>
					<supportedProjectTypes>
						<supportedProjectType>war</supportedProjectType>
						<supportedProjectType>bundle</supportedProjectType>
					</supportedProjectTypes>
					<instructions>
						<Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Name>${project.name}</Bundle-Name>
						<Bundle-Version>${project.version}</Bundle-Version>
						<Bundle-ClassPath>.,{maven-dependencies},WEB-INF/classes</Bundle-ClassPath>
						<Web-ContextPath>${contextPath}</Web-ContextPath>
						<Import-Package>
							javax.servlet.*,
							net.sf.cglib.beans,
							net.sf.cglib.core,
							net.sf.cglib.proxy,
							net.sf.cglib.reflect,
							net.sf.cglib.transform,
							net.sf.cglib.util,
							org.geppetto.simulation,
							org.geppetto.core.s3,
							org.apache.shiro.web.env,
							org.apache.shiro.web.servlet,
							org.apache.shiro.authc,
							org.apache.shiro.realm,
							org.eclipse.emf.common.util,
							org.eclipse.virgo.web.dm;version="2.1.1.RELEASE",*
						</Import-Package>
						<Import-Library>org.springframework.spring;version="${spring.version}"</Import-Library>
					</instructions>
				</configuration>
				<executions>
					<execution>
						<id>bundle</id>
						<goals>
							<goal>manifest</goal>
						</goals>
						<phase>prepare-package</phase>
						<inherited>true</inherited>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<warSourceExcludes>node_modules/**</warSourceExcludes>
					<packagingExcludes>WEB-INF/classes/lib/*.jar, WEB-INF/lib/*.jar, node_modules/**, node/**</packagingExcludes>
					<warName>org.geppetto.frontend</warName>
					<archive>
						<manifestFile>src/main/webapp/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
							<includeScope>runtime</includeScope>
							<excludeScope>provided</excludeScope>
						</configuration>
					</execution>
					<execution>
						<id>install</id>
						<phase>install</phase>
						<goals>
							<goal>sources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.phasebash.jsdoc</groupId>
				<artifactId>jsdoc3-maven-plugin</artifactId>
				<version>1.1.0</version>
				<configuration>
					<recursive>true</recursive>
					<directoryRoots>
						<directoryRoot>${basedir}/src/main/webapp/js/</directoryRoot>
					</directoryRoots>
					<outputDirectory>${basedir}/src/main/webapp/jsdocs</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<phase>site</phase>
						<goals>
							<goal>jsdoc3</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.2.1,)</versionRange>
										<goals>
											<goal>exec</goal>
											<goal>generate-resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.github.eirslett</groupId>
										<artifactId>frontend-maven-plugin</artifactId>
										<versionRange>1.3</versionRange>
										<goals>
											<goal>npm</goal>
											<goal>install-node-and-npm</goal>
											<goal>grunt</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>
	<repositories>
		<repository>
			<id>com.springsource.repository.bundles.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Releases</name>
			<url>http://repository.springsource.com/maven/bundles/release</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
		<repository>
			<id>com.springsource.repository.libraries.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Library Releases</name>
			<url>http://repository.springsource.com/maven/libraries/release</url>
		</repository>
		<repository>
			<id>com.springsource.repository.libraries.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Library Releases</name>
			<url>http://repository.springsource.com/maven/libraries/external</url>
		</repository>
	</repositories>
</project>
